name: "CI/CD: Build and Deploy to GKE with Helm + Versioning"

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: self-hosted

    env:
      DOCKER_REPO: nishankkoul/tinyllama-server
      CHART_DIR: helm-tinyllama
      PROJECT_ID: future-campaign-467305-q6
      CLUSTER_NAME: tinyllama-inference-cluster
      CLUSTER_ZONE: us-central1-a

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up version tag
      id: version
      run: |
        # Get latest tag
        latest=$(git tag --sort=-v:refname | head -n 1)
        if [[ -z "$latest" ]]; then
          latest="v1.0.0"
        fi

        # Extract major, minor, patch
        IFS='.' read -r -a parts <<< "${latest#v}"
        major=${parts[0]}
        minor=${parts[1]}
        patch=${parts[2]}
        
        # Bump patch
        next_tag="v$major.$minor.$((patch+1))"

        echo "next_tag=$next_tag" >> "$GITHUB_OUTPUT"
        echo "ðŸ”– Next version: $next_tag"

    - name: Copy model into Docker context
      run: |
        mkdir -p models
        cp /home/nishankkoulpet/models/tinyllama.gguf models/

    - name: Build Docker image
      run: docker build -t $DOCKER_REPO:${{ steps.version.outputs.next_tag }} .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push $DOCKER_REPO:${{ steps.version.outputs.next_tag }}

    - name: Create Git tag and push
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag ${{ steps.version.outputs.next_tag }}
        git push origin ${{ steps.version.outputs.next_tag }}

    - name: Authenticate to GCP and GKE
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > /tmp/key.json
        gcloud auth activate-service-account --key-file=/tmp/key.json
        gcloud config set project $PROJECT_ID
        gcloud config set compute/zone $CLUSTER_ZONE
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID

    - name: Update image tag in Helm values.yaml
      run: |
        sed -i 's|tag: .*|tag: "${{ steps.version.outputs.next_tag }}"|' $CHART_DIR/values.yaml

    - name: Helm Lint
      run: helm lint $CHART_DIR

    - name: Helm Dry Run
      run: |
        helm upgrade --install llama-api $CHART_DIR \
          --namespace default \
          --wait \
          --atomic \
          --dry-run

    - name: Helm Deploy
      run: |
        helm upgrade --install llama-api $CHART_DIR \
          --namespace default \
          --wait \
          --atomic
